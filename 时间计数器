
Y0:=FALSE;
OUT_T(M0,TCO,K10);
IF TS0=1 THEN
    Y0:=1;
END_IF;

tmData0 := T#30s;

tmData0 := MUL_TIME(tmData0 + T#10ms, 2);

IF tmData0 >= T#30s THEN
	Y1:=1;
	RETURN;
END_IF;

//////////////////////////////////////////////////////////////////////////////////////////////
局部标签
bResult	位	VAR			定时器执行的eno（位）
td1sTimer	定时器	VAR			1秒计测试定时器（定时器）
	全局标签				
G_bOperatingStatus	位	VAR_GLOBAL				运转状态(位)
G_tmTime	时间	VAR_GLOBAL				运转时间总（时间）
G_dSeconds	双字[有符号]	VAR_GLOBAL				运转时间（双字有符号）

(* 按秒对运转时间进行计数。 *)
OUT_T(G_bOperatingStatus, td1sTimer, 10); (* 定时器的设定值1000ms *)
IF td1sTimer.S THEN (* 1秒后 *)
	(* 运转时间 （TIMER型）计时 *)
	G_tmTime := G_tmTime + T#1000ms;
	IF G_tmTime < T#0ms THEN (* 发生溢出时 *)
		G_tmTime := T#0ms; (* 清零 *)
	END_IF;
	(* 运转时间 （以秒为单位）计时 *)
	G_dSeconds := G_dSeconds +1;
	IF G_dSeconds >= 86400 THEN
		G_dSeconds := 0; (* 第24小时清零 *)
	END_IF;
	(* 定时器的复位 （当前值：0，触点：OFF）*)
	RST(TRUE, td1sTimer.N);
	RST(TRUE, td1sTimer.S);
END_IF;

OUT_T(G_bOperatingStatus, td1sTimer, 10)：这行代码使用 OUT_T 函数设置了一个定时器 td1sTimer 的设定值为 1000ms（1秒），并将定时器的输出结果存储在变量 bResult 中。
IF td1sTimer.S THEN：如果定时器的输出 td1sTimer.S 为真，表示定时器达到了设定值（经过了1秒）。
G_tmTime := G_tmTime + T#1000ms;：将运转时间（以 TIMER 型式）增加 1000ms（1秒）。
IF G_tmTime < T#0ms THEN：如果运转时间发生溢出，即超过了 TIMER 类型的最大值。
G_tmTime := T#0ms;：将运转时间重置为 0ms，即清零。
G_dSeconds := G_dSeconds + 1;：将运转时间（以秒为单位）增加 1。
IF G_dSeconds >= 86400 THEN：如果运转时间达到了 24 小时（86400 秒）。
G_dSeconds := 0;：将运转时间重置为 0，即清零。
RST(TRUE, td1sTimer.N);：复位定时器的当前值为 0。
RST(TRUE, td1sTimer.S);：复位定时器的触点状态为 OFF。
其中，td1sTimer.N 表示定时器的当前值，td1sTimer.S 表示定时器的触点状态（ON/OFF）。这两个变量用于控制和监视定时器的状态和时间。

/////////////////////////////////////////////////////////////////////////////////////////




M0:=SM412 AND M1 ;
//我的本意是触发时间的时候加个延时触发啥的替代 这个玩意 也就是里面触发持续一段时间的触发
IF  LDP( 1 , M0 )=1 THEN
	


FOR  D0:= 1  TO  1  BY  1  DO
	 D100:= D100+1 ;
	 
END_FOR;END_IF;


标签名
i_tmInterval
o_bOutputSignal0
o_bOutputSignal1
bResult
wInterval
tdTimer0
tdTimer1

数据类型
位
位
位
字[有符号]
定时器
定时器
时间

类
VAR
VAR
VAR
VAR
VAR
VAR
VAR

注释
输出信号0 (位), 初始值：TRUE
输出信号1 (位), 初始值：TRUE
定时器执行执行eno
低速定时器设定值
定时器0
定时器1
切换间隔 (时间)

(* 使输出信号0、1交互闪烁。(触发器梯形图) *)
(* 求低速定时器的设定值。 *)

wInterval := TIME_TO_INT(i_tmInterval) / 100;

(* 定时器1为OFF时，定时器0在设置时间ms后置ON *)
bResult := OUT_T(NOT tdTimer1.S, tdTimer0, wInterval);

(* 定时器0从OFF变为ON时，定时器1在设置时间ms后置ON *)
bResult := OUT_T(tdTimer0.S, tdTimer1, wInterval);

(* 定时器0为ON时，输出信号0置ON *)
o_bOutputSignal0 := tdTimer0.S;

(* 定时器0为OFF时，输出信号1置ON *)
o_bOutputSignal1 := NOT tdTimer0.S;

//下面是我放弃了时间计数器，用寄存器写的程序主要的功能是想要M1触发的时候形成一个保持的状态，那么这个状态将持续大概五十秒的时间，M1就会再次变成false；

M1:=M1;
M0:=SM412 AND M1 ;
//我的本意是触发时间的时候加个延时触发啥的替代 这个玩意 也就是里面触发持续一段时间的触发
IF  LDP( 1 , M0 )=1 THEN
	


FOR  D0:= 1  TO  1  BY  1  DO
	 D100:= D100+1 ;
	 IF  D100> 50 THEN  D100:=0; M1:=0;END_IF;
END_FOR;END_IF;

